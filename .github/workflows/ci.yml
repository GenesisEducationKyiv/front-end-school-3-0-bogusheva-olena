name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint

            - name: Type Check
              run: npm run typecheck

            - name: Build Frontend
              run: npm run build

            - name: Build Docker image
              run: docker build -t music-tracks-app-frontend .

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist

            - name: Run Unit Tests
              run: npm run test

    e2e:
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps

            - name: Run smoke test
              run: npx playwright test e2e-tests/smoke.spec.ts

            - name: Upload Playwright report on failure
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report
                  path: playwright-report
